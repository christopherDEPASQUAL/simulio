

services:
  mysql:
    image: mysql:8.0
    container_name: simulio_mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: ${TIMEZONE}
    ports:
      - "3307:3306"   # côté hôte :3307 pour éviter conflit avec une autre instance
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/initdb.d:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -p${MYSQL_ROOT_PASSWORD} --silent"]
      interval: 5s
      timeout: 3s
      retries: 30

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: simulio_pma
    depends_on:
      - mysql
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      UPLOAD_LIMIT: 64M
    ports:
      - "${PMA_PORT}:80"

  backend-php:
    build: ./backend/php
    container_name: simulio_backend_php
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      APP_ENV: dev
      DATABASE_URL: "mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:3306/${MYSQL_DATABASE}?serverVersion=8.0&charset=utf8mb4"
      SIMULATOR_BASE_URL: http://backend-python:8001
      TZ: ${TIMEZONE}
    ports:
      - "${PHP_PORT}:8000"
    working_dir: /app
    volumes:
      - ./backend/php:/app
      - php_vendor:/app/vendor
      - php_var:/app/var
    command: >
      sh -lc "
        if [ -f composer.json ]; then
          composer install --no-interaction;
        else
          echo 'composer.json not found – did you run create-project?';
        fi;
        php -S 0.0.0.0:8000 -t public
      "


  backend-python:
    build: ./backend/python
    container_name: simulio_backend_python
    environment:
      PYTHONPATH: /app
      TZ: ${TIMEZONE}
      PYTHONUNBUFFERED: "1"
    ports:
      - "${PY_PORT}:8001"
    working_dir: /app
    volumes:
      - ./backend/python:/app
      - py_venv:/app/.venv
    command: >
      sh -c "
        [ -d .venv ] || python -m venv .venv;
        . .venv/bin/activate &&
        pip install --upgrade pip &&
        pip install -r requirements.txt &&
        uvicorn simulator.app:app --host 0.0.0.0 --port 8001 --reload --reload-exclude .venv
      "


  frontend:
    build: ./frontend
    container_name: simulio_frontend
    environment:
      VITE_API_URL: ${VITE_API_URL}
      TZ: ${TIMEZONE}
    depends_on:
      - backend-php
    ports:
      - "${FRONTEND_PORT}:5173"
    working_dir: /app
    volumes:
      - ./frontend:/app
      # volume node_modules pour ne pas être écrasé par le bind-mount
      - node_modules:/app/node_modules
    command: >
      sh -c "
        corepack enable &&
        pnpm install &&
        pnpm dev --host
      "

volumes:
  mysql_data:
  php_vendor:
  php_var:
  node_modules:
  py_venv:
